#!/usr/bin/env ruby

require 'rbbt-util'
require 'rbbt/workflow'
require 'rbbt/util/simpleopt'
require 'rbbt/util/semaphore'

options = SOPT.get("-wd--workdir* Workdir:-h--help Help:-r--recursive Clean jobs recursively")

if options[:help]
  puts SOPT.doc
  puts <<-EOF

# GenomicTools Update

This tool updates the system by running all the missing jobs in the pipeline.
For a given `workdir` it finds all uploaded files and calls for them the default pipeline,
which is enacted by the `all` task. The `all` task should depend on all the workflow tasks
that need to be ran by default.

  EOF
  exit 0
end

Workflow.require_workflow "GenomicTools"

GenomicTools.workdir = File.expand_path(options[:workdir] || '/home/mvazquezg/git/sandbox/data_portal/CNAG')

$cpus ||= SOPT.get("--cpus*")[:cpus]
$cpus = $cpus.to_i if $cpus

GenomicTools.nested_workflows.each do |workflow|
  Log.info Log.color(:magenta, "Processing #{ workflow }")
  old_s = Log.severity
  Log.severity = 10
  samples = GenomicTools.all_workflow_authoritative_sample_files(workflow).keys
  Log.severity = old_s
  Log.info Log.color(:magenta, "Samples: #{samples.length}")

  done = []
  TSV.traverse samples, :cpus => 10, :into => done do |sample|
    puts Log.color(:blue, "PROCESSING " << sample)
    start = Time.now
    job = workflow.job(:annotated_variants, sample)
    begin
      if options[:recursive]
        job.recursive_clean
      else
        job.clean
      end
      res = job.run true
      puts Log.color(:green, "DONE #{sample} -- #{(Time.now - start).to_i} seconds" )
      job.join
      sample
    rescue Exception
      Log.exception $!
      job.abort
      puts Log.color(:red, "ERROR " << sample)
      #raise $!
      next
    end
  end
end
